{"version":3,"file":"static/js/190.ceb3b6db.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/pages/customs/Paginator/Paginator.module.css?148a","components/pages/customs/Paginator/Paginator.jsx","webpack://social-network/./src/components/pages/FindUsers/User/User.module.css?73f6","components/pages/FindUsers/User/User.jsx","components/pages/FindUsers/FindUsers.jsx","redux/users-selectors.js","components/pages/FindUsers/FindUsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__tQzEi\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1)\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <>\r\n      {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button> }\r\n      {pages\r\n        .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n        .map(page => {\r\n        return <span className={(currentPage === page) ? styles.selectedPage : \"\"}\r\n                     onClick={() => onPageChanged(page)}>{page}</span>\r\n      })}\r\n      {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button> }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"User_userPhoto__h0WCY\"};","import React from \"react\";\r\nimport userPhoto from \"../../../../assects/images/user.jpg\";\r\nimport styles from \"./User.module.css\";\r\nimport CustomLink from \"../../customs/CustomLink/CustomLink\";\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n  return (\r\n    <>\r\n        <span>\r\n          <div>\r\n            <CustomLink to={`/profile/${user.id}`}>\r\n              {<img className={styles.userPhoto}\r\n                    src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                    alt=\"\"/>}\r\n            </CustomLink>\r\n          </div>\r\n          <div>\r\n            {user.followed\r\n              ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                          unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n              : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                          follow(user.id)\r\n                        }}>Follow</button>}\r\n          </div>\r\n        </span>\r\n      <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n      <span>\r\n          <div>{\"user.location.city\"}</div>\r\n          <div>{\"user.location.country\"}</div>\r\n        </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../customs/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst FindUsers = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Paginator currentPage={props.currentPage} pageSize={props.pageSize}\r\n                 onPageChanged={props.onPageChanged} totalItemsCount={props.totalUsersCount}\r\n                 portionSize={10}/>\r\n\r\n      {props.users.map(user => <User user={user}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow}\r\n                                     unfollow={props.unfollow}/>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FindUsers;","export const getUsers = (state) => {\r\n  return state.findUsersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.findUsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.findUsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.findUsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.findUsersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.findUsersPage.followingInProgress;\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport FindUsers from \"./FindUsers\";\r\nimport Preloader from \"../customs/Preloader/Preloader\";\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  toogleFollowingProgress,\r\n  unfollow,\r\n  requestUsers\r\n} from \"../../../redux/findUsersReducer\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers\r\n} from \"../../../redux/users-selectors\";\r\n\r\nclass FindUsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.props.isFetching ? <Preloader /> : null }\r\n        <FindUsers totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toogleFollowingProgress={this.props.toogleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress} />\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toogleFollowingProgress,\r\n    getUsers: requestUsers\r\n  })\r\n)(FindUsersContainer)"],"names":["totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","page","map","className","styles","user","followingInProgress","follow","unfollow","CustomLink","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","props","totalUsersCount","users","getUsers","state","findUsersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","FindUsersContainer","pageNumber","this","Preloader","toogleFollowingProgress","React","compose","connect","setCurrentPage","requestUsers"],"sourceRoot":""}