{"version":3,"file":"static/js/416.31175e5f.chunk.js","mappings":"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","sources":["components/pages/Profile/ProfileStatus/ProfileStatus.jsx","webpack://social-network/./src/components/pages/Profile/ProfileInfo/ProfileInfo.module.css?a8d8","webpack://social-network/./src/components/pages/Profile/ProfileDataForm/ProfileDataForm.module.css?c9e4","components/pages/Profile/ProfileDataForm/ProfileDataForm.jsx","components/pages/Profile/ProfileInfo/ProfileInfo.jsx","components/pages/Profile/MyPosts/Post/Post.jsx","components/pages/Profile/MyPosts/MyPosts.jsx","components/pages/Profile/MyPosts/MyPostsContainer.jsx","components/pages/Profile/Profile.jsx","components/pages/Profile/ProfileContainer.jsx","webpack://social-network/./src/components/pages/customs/CustomTextarea/CustomTextarea.module.css?25bd","webpack://social-network/./src/components/pages/customs/ErrorMessage/ErrorMessage.module.css?e0b3","components/pages/customs/ErrorMessage/ErrorMessage.jsx","components/pages/customs/CustomTextarea/CustomTextarea.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (evt) => {\r\n    setStatus(evt.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!editMode\r\n        ?\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status || \"what's new?\"}</span>\r\n        </div>\r\n        :\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ProfileInfo_contact__TWnE1\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileDataForm_form__pu7hQ\"};","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {CustomInput, CustomTextarea} from \"../../customs/CustomTextarea/CustomTextarea\";\r\nimport style from \"./ProfileDataForm.module.css\";\r\n\r\nconst validationSchema = Yup.object({\r\n  fullName: Yup.string()\r\n    .required('Name is required'),\r\n  lookingForAJobDescription: Yup.string()\r\n    .required('Field is required')\r\n    .max(100, 'Exceeded maximum number of characters'),\r\n  aboutMe: Yup.string()\r\n    .required('Field is required')\r\n    .max(100, 'Exceeded maximum number of characters')\r\n})\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n  const submit = (values, {setSubmitting, setStatus}) => {\r\n    props.onSubmit(values, setStatus);\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return (\r\n    <Formik initialValues={props.profile}\r\n            onSubmit={submit}\r\n            validationSchema={validationSchema}>\r\n      {({errors, isSubmitting, isValid, status}) => (\r\n        <Form className={style.form}>\r\n          <label>\r\n            <b>Name:</b>\r\n            <Field as={CustomInput} type=\"text\" name=\"fullName\" placeholder=\"Name\" errors={errors}/>\r\n          </label>\r\n          <label>\r\n            <b>Looking for a job:</b>\r\n            <Field type=\"checkbox\" name=\"lookingForAJob\"/>\r\n          </label>\r\n          <label>\r\n            <b>My professional skills:</b>\r\n            <Field as={CustomTextarea} name=\"lookingForAJobDescription\" placeholder=\"My professional skills\" errors={errors}/>\r\n          </label>\r\n          <label>\r\n            <b>About me:</b>\r\n            <Field as={CustomTextarea} name=\"aboutMe\" placeholder=\"About me\" errors={errors}/>\r\n          </label>\r\n          <div>\r\n            <b>Contacts:</b>\r\n            <ul>\r\n              {Object.keys(props.profile.contacts).map(key => {\r\n                return <li key={key}>\r\n                  <label>\r\n                    <b>{key}:</b>\r\n                    <Field as={CustomInput} type=\"text\" name={\"contacts.\" + key} placeholder={key} errors={errors} />\r\n                  </label>\r\n                </li>\r\n              })}\r\n            </ul>\r\n          </div>\r\n          {status}\r\n          <button type=\"submit\" disabled={isSubmitting || !isValid}>Save changes</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default ProfileDataForm;","import React, {useState} from \"react\";\r\nimport Preloader from \"../../customs/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport userPhoto from \"../../../../assects/images/user.jpg\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileDataForm from \"../ProfileDataForm/ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onPhotoSelected = (evt) => {\r\n    if (evt.target.files.length) {\r\n      props.savePhoto(evt.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData, setStatus) => {\r\n    props.saveProfile(formData, setStatus)\r\n      .then( () => {\r\n        setEditMode(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={props.profile.photos.large !== null ? props.profile.photos.large : userPhoto} width={200} height={200}\r\n           alt=\"\"/>\r\n      {props.isOwner && <input type={\"file\"} onChange={onPhotoSelected}/>}\r\n\r\n      <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n      {editMode\r\n        ? <ProfileDataForm profile={props.profile}\r\n                           onSubmit={onSubmit} />\r\n        : <ProfileData profile={props.profile}\r\n                       isOwner={props.isOwner}\r\n                       goToEditMode={() => {setEditMode(true)}} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <>\r\n      {props.isOwner && <button onClick={props.goToEditMode}>Edit</button>}\r\n      <p>\r\n        <b>Name:</b> {props.profile.fullName}\r\n      </p>\r\n      <p>\r\n        <b>Looking for a job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </p>\r\n      {props.profile.lookingForAJob &&\r\n        <p>\r\n          <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n        </p>\r\n      }\r\n      <p>\r\n        <b>About me:</b> {props.profile.aboutMe}\r\n      </p>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        <ul>\r\n          {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Contact = (props) => {\r\n  if (props.contactValue) {\r\n    return (\r\n      <li className={style.contact}>\r\n        <b>{props.contactTitle}:</b> {props.contactValue}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\n\r\nconst Post = ({children}) => {\r\n  return (\r\n    <li>\r\n      {children}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {CustomTextarea} from \"../../customs/CustomTextarea/CustomTextarea\";\r\n\r\nconst validationSchema = Yup.object({\r\n  newPost: Yup.string()\r\n    .required('Field is required')\r\n    .max(100, `Max length is 100 symbols`)\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n  const submit = (values, {setSubmitting, resetForm}) => {\r\n    props.addPost(values.newPost);\r\n    resetForm({values: ''})\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{newPost: ''}}\r\n      onSubmit={submit}\r\n      validateOnBlur={false}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {({isSubmitting, errors, isValid}) => (\r\n\r\n        <Form>\r\n          <div>\r\n            <Field as={CustomTextarea} name=\"newPost\" placeholder=\"Enter your post\" errors={errors}/>\r\n          </div>\r\n          <button type=\"submit\" disabled={(isSubmitting || !isValid)}>\r\n            Add post\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  const postElement =\r\n    [...props.postData]\r\n      .reverse()\r\n      .map(item => <Post key={item.id}>{item.message}</Post>)\r\n\r\n  return (\r\n    <>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddPostForm addPost={props.addPost}/>\r\n        <ul>\r\n          {postElement}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsFactory = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToPropsFactory = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPost(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToPropsFactory, mapDispatchToPropsFactory)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <>\r\n      <ProfileInfo isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"../../../App\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile isOwner={!this.props.match.params.userId} {...this.props} profile={this.props.profile} status={this.props.status} savePhoto={this.props.savePhoto}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addPost,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter\r\n)(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldControl\":\"CustomTextarea_fieldControl__qQVHB\",\"fieldError\":\"CustomTextarea_fieldError__9NTyF\"};","// extracted by mini-css-extract-plugin\nexport default {\"errors\":\"ErrorMessage_errors__mHYok\"};","import React from \"react\";\r\nimport style from \"./ErrorMessage.module.css\";\r\n\r\nconst ErrorMessage = ({children}) => {\r\n  return (\r\n    <p className={style.errors}>{children}</p>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React from \"react\";\r\nimport style from \"./CustomTextarea.module.css\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nexport const CustomTextarea = ({errors, ...props}) => {\r\n  return (\r\n    <>\r\n      <textarea className={`${style.fieldControl} ${errors[props.name] ? style.fieldError : ''}`} {...props}/>\r\n      <ErrorMessage>{errors[props.name]}</ErrorMessage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const CustomInput = ({errors, ...props}) => {\r\n  return (\r\n    <>\r\n      <input className={`${style.fieldControl} ${errors[props.name] ? style.fieldError : ''}`} {...props}/>\r\n      <ErrorMessage>{errors[props.name]}</ErrorMessage>\r\n    </>\r\n  )\r\n}\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","evt","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","validationSchema","Yup","fullName","required","lookingForAJobDescription","max","aboutMe","initialValues","profile","onSubmit","values","setSubmitting","errors","isSubmitting","isValid","className","style","as","CustomInput","type","name","placeholder","CustomTextarea","Object","keys","contacts","map","key","disabled","ProfileData","isOwner","goToEditMode","lookingForAJob","Contact","contactTitle","contactValue","Preloader","src","photos","large","userPhoto","width","height","alt","target","files","length","savePhoto","formData","saveProfile","then","children","newPost","AddPostForm","resetForm","addPost","validateOnBlur","React","postElement","postData","reverse","item","message","id","connect","state","profilePage","newPostText","dispatch","MyPosts","ProfileContainer","refreshProfile","userId","match","params","authorisedUserId","getUserProfile","getStatus","this","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"sourceRoot":""}