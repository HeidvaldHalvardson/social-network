{"version":3,"file":"static/js/40.a4cf9f5e.chunk.js","mappings":"4PAwCA,EAtCsB,SAACA,GAErB,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,EAAMI,QAA3C,eAAOA,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAW,WACTD,EAAUL,EAAMI,OACjB,GAAE,CAACJ,EAAMI,SAeV,OACE,8BACIF,GAMA,0BACE,kBAAOK,SAbQ,SAACC,GACtBH,EAAUG,EAAIC,cAAcC,MAC7B,EAWwCC,WAAW,EAAMC,OAlB/B,WACzBT,GAAY,GACZH,EAAMa,aAAaT,EACpB,EAeqFM,MAAON,OALvF,0BACE,iBAAMU,QAlBW,WACvBX,GAAY,EACb,EAgBO,SAAkCH,EAAMI,QAAU,mBAS3D,EClBD,EAhBoB,SAACJ,GAEnB,OAAKA,EAAMe,SAKT,+BACE,4BACE,gBAAKC,IAAKhB,EAAMe,QAAQE,OAAOC,MAAOC,IAAI,MAC1C,SAAC,EAAD,CAAef,OAAQJ,EAAMI,OAAQS,aAAcb,EAAMa,qBAPtD,SAACO,EAAA,EAAD,GAWV,E,oBCRD,EARa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACE,wBACGA,GAGN,E,6BCFKC,EAAmBC,EAAAA,GAAW,CAClCC,QAASD,EAAAA,KACNE,SAAS,qBACTC,IAAI,IAFE,+BAKLC,EAAc,SAAC3B,GAQnB,OACE,SAAC,KAAD,CACE4B,cAAe,CAACJ,QAAS,IACzBK,SATW,SAACC,EAAD,GAAyC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UACtChC,EAAMiC,QAAQH,EAAON,SACrBQ,EAAU,CAACF,OAAQ,KACnBC,GAAc,EACf,EAMGG,gBAAgB,EAChBZ,iBAAkBA,EAJpB,SAMG,gBAAEa,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAAxB,OAEC,UAAC,KAAD,YACE,0BACE,SAAC,KAAD,CAAOC,GAAIC,EAAAA,EAAgBC,KAAK,UAAUC,YAAY,kBAAkBL,OAAQA,OAElF,mBAAQM,KAAK,SAASC,SAAWR,IAAiBE,EAAlD,wBANH,GAaN,EAqBD,EAnBgBO,EAAAA,MAAW,SAAC5C,GAC1B,IAAM6C,GACJ,OAAI7C,EAAM8C,UACPC,UACAC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,UAAOA,EAAKC,SAAhB,IAEb,OACE,iCACE,sCACA,4BACE,SAACvB,EAAD,CAAaM,QAASjC,EAAMiC,WAC5B,wBACGY,SAKV,I,UCtCD,GAFyBM,EAAAA,EAAAA,KAfM,SAACC,GAC9B,MAAO,CACLN,SAAUM,EAAMC,YAAYP,SAC5BQ,YAAaF,EAAMC,YAAYC,YAElC,IAEiC,SAACC,GACjC,MAAO,CACLtB,QAAS,SAACqB,GACRC,GAAStB,EAAAA,EAAAA,IAAQqB,GAClB,EAEJ,GAEwBH,CAA2DK,GCNpF,EATgB,SAACxD,GACf,OACE,iCACE,SAAC,EAAD,CAAae,QAASf,EAAMe,QAASX,OAAQJ,EAAMI,OAAQS,aAAcb,EAAMa,gBAC/E,SAAC,EAAD,MAGL,E,oBCJK4C,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAiBH,OAjBGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAEJ,WACE,IAAIC,EAASC,KAAK3D,MAAM4D,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAK3D,MAAM8D,kBAEtBH,KAAK3D,MAAM+D,eAAeL,GAC1BC,KAAK3D,MAAMgE,UAAUN,EACtB,uBAED,WACE,OACE,+BACE,SAAC,GAAD,kBAAaC,KAAK3D,OAAlB,IAAyBe,QAAS4C,KAAK3D,MAAMe,QAASX,OAAQuD,KAAK3D,MAAMI,WAG9E,OAjBGqD,CAAyBb,EAAAA,WA2B/B,GAAeqB,EAAAA,EAAAA,KACbd,EAAAA,EAAAA,KARsB,SAACC,GAAD,MAAY,CAClCrC,QAASqC,EAAMC,YAAYtC,QAC3BX,OAAQgD,EAAMC,YAAYjD,OAC1B0D,iBAAkBV,EAAMc,KAAKR,OAC7BS,OAAQf,EAAMc,KAAKC,OAJG,GAQG,CACvBlC,QAAAA,EAAAA,GACA8B,eAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAnD,aAAAA,EAAAA,KAEFuD,EAAAA,EAPF,CAQEX,E,sGCzCF,G,QAA+B,sCAA/B,EAAiF,mCCAjF,EAAyB,6B,SCQzB,EANqB,SAAC,GAAgB,IAAfpC,EAAc,EAAdA,SACrB,OACE,cAAGgD,UAAWC,EAAd,SAA6BjD,GAEhC,E,0BCHYkB,EAAiB,SAAC,GAAwB,IAAvBH,EAAsB,EAAtBA,OAAWpC,GAAW,YACpD,OACE,iCACE,6BAAUqE,UAAS,UAAKC,EAAL,YAA2BlC,EAAOpC,EAAMwC,MAAQ8B,EAAmB,KAAUtE,KAChG,SAAC,EAAD,UAAeoC,EAAOpC,EAAMwC,UAGjC,EAEY+B,EAAc,SAAC,GAAwB,IAAvBnC,EAAsB,EAAtBA,OAAWpC,GAAW,YACjD,OACE,iCACE,0BAAOqE,UAAS,UAAKC,EAAL,YAA2BlC,EAAOpC,EAAMwC,MAAQ8B,EAAmB,KAAUtE,KAC7F,SAAC,EAAD,UAAeoC,EAAOpC,EAAMwC,UAGjC,C","sources":["components/pages/Profile/ProfileStatus/ProfileStatus.jsx","components/pages/Profile/ProfileInfo/ProfileInfo.jsx","components/pages/Profile/MyPosts/Post/Post.jsx","components/pages/Profile/MyPosts/MyPosts.jsx","components/pages/Profile/MyPosts/MyPostsContainer.jsx","components/pages/Profile/Profile.jsx","components/pages/Profile/ProfileContainer.jsx","webpack://social-network/./src/components/pages/customs/CustomTextarea/CustomTextarea.module.css?25bd","webpack://social-network/./src/components/pages/customs/ErrorMessage/ErrorMessage.module.css?e0b3","components/pages/customs/ErrorMessage/ErrorMessage.jsx","components/pages/customs/CustomTextarea/CustomTextarea.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (evt) => {\r\n    setStatus(evt.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!editMode\r\n        ?\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status || \"what's new?\"}</span>\r\n        </div>\r\n        :\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport Preloader from \"../../customs/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img src={props.profile.photos.large} alt=\"\"/>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\n\r\nconst Post = ({children}) => {\r\n  return (\r\n    <li>\r\n      {children}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {CustomTextarea} from \"../../customs/CustomTextarea/CustomTextarea\";\r\n\r\nconst validationSchema = Yup.object({\r\n  newPost: Yup.string()\r\n    .required('Field is required')\r\n    .max(100, `Max length is 100 symbols`)\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n  const submit = (values, {setSubmitting, resetForm}) => {\r\n    props.addPost(values.newPost);\r\n    resetForm({values: ''})\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{newPost: ''}}\r\n      onSubmit={submit}\r\n      validateOnBlur={false}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {({isSubmitting, errors, isValid}) => (\r\n\r\n        <Form>\r\n          <div>\r\n            <Field as={CustomTextarea} name=\"newPost\" placeholder=\"Enter your post\" errors={errors}/>\r\n          </div>\r\n          <button type=\"submit\" disabled={(isSubmitting || !isValid)}>\r\n            Add post\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  const postElement =\r\n    [...props.postData]\r\n      .reverse()\r\n      .map(item => <Post>{item.message}</Post>)\r\n\r\n  return (\r\n    <>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddPostForm addPost={props.addPost}/>\r\n        <ul>\r\n          {postElement}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsFactory = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToPropsFactory = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPost(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToPropsFactory, mapDispatchToPropsFactory)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, getStatus, getUserProfile, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"../../../App\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addPost,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldControl\":\"CustomTextarea_fieldControl__qQVHB\",\"fieldError\":\"CustomTextarea_fieldError__9NTyF\"};","// extracted by mini-css-extract-plugin\nexport default {\"errors\":\"ErrorMessage_errors__mHYok\"};","import React from \"react\";\r\nimport style from \"./ErrorMessage.module.css\";\r\n\r\nconst ErrorMessage = ({children}) => {\r\n  return (\r\n    <p className={style.errors}>{children}</p>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React from \"react\";\r\nimport style from \"./CustomTextarea.module.css\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nexport const CustomTextarea = ({errors, ...props}) => {\r\n  return (\r\n    <>\r\n      <textarea className={`${style.fieldControl} ${errors[props.name] ? style.fieldError : ''}`} {...props}/>\r\n      <ErrorMessage>{errors[props.name]}</ErrorMessage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const CustomInput = ({errors, ...props}) => {\r\n  return (\r\n    <>\r\n      <input className={`${style.fieldControl} ${errors[props.name] ? style.fieldError : ''}`} {...props}/>\r\n      <ErrorMessage>{errors[props.name]}</ErrorMessage>\r\n    </>\r\n  )\r\n}\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","evt","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","profile","src","photos","large","alt","Preloader","children","validationSchema","Yup","newPost","required","max","AddPostForm","initialValues","onSubmit","values","setSubmitting","resetForm","addPost","validateOnBlur","isSubmitting","errors","isValid","as","CustomTextarea","name","placeholder","type","disabled","React","postElement","postData","reverse","map","item","message","connect","state","profilePage","newPostText","dispatch","MyPosts","ProfileContainer","userId","this","match","params","authorisedUserId","getUserProfile","getStatus","compose","auth","isAuth","withRouter","className","style","CustomInput"],"sourceRoot":""}